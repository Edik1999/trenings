{"version":3,"sources":["components/Form.js","components/TreningsList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onAdd","useState","value","inputDate","setInputDate","inputDistance","setInputDistance","className","htmlFor","type","onChange","e","prevInput","target","onClick","preventDefault","error","document","querySelector","classList","contains","add","setTimeout","remove","TreningsList","data","onRemove","sort","a","b","moment","date","sortData","map","item","itemDate","itemDistance","checkItems","distance","id","App","trenings","setTrenings","dateFromInput","distanceFromInput","filter","filtered","length","Number","prev","shortid","generate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4b65d18.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport propTypes from 'prop-types';\n\nconst Form = ({onAdd}) => {\n\n    const [inputDate, setInputDate] = useState({value: ''});\n    const [inputDistance, setInputDistance] = useState({value: ''});\n\n    const btnClick = (e) => {\n        e.preventDefault();\n        if(inputDate.value !== '' && inputDistance.value !== ''){\n            onAdd(inputDate.value,inputDistance.value);\n            setInputDistance({value: ''});\n            setInputDate({value: ''})\n        } else {\n            const error = document.querySelector('.trenings__form-button').classList;\n            if(!error.contains('error')){\n                error.add('error');\n                setTimeout(() => error.remove('error'), 4000)\n            }\n        }\n    }\n\n    const dateInputChange = (e) => {\n        setInputDate(prevInput => ({...prevInput, value: e.target.value}))\n    }\n\n    const distanceInputChange = (e) => {\n        setInputDistance(prevInput => ({...prevInput, value: e.target.value}))\n    }\n\n    return (\n        <form className=\"trenings__form\">\n\n            <label htmlFor=\"date\">\n                Дата (ДД.ММ.ГГ)\n                <input type=\"date\" className=\"trenings__form-input date\" onChange={dateInputChange} value={inputDate.value}/>\n            </label>\n            \n            <label htmlFor=\"distance\">\n                Пройдено км\n                <input type=\"text\" className=\"trenings__form-input\" onChange={distanceInputChange} value={inputDistance.value}/>\n            </label>\n            \n            <button type=\"submit\" className=\"trenings__form-button\" onClick={btnClick}>OK</button>\n\n        </form>\n    );\n}\n\nForm.propTypes = {\n    onAdd: propTypes.func\n};\n\n\nexport default Form;\n","import React from 'react';\nimport moment from 'moment';\nimport propTypes from 'prop-types';\n\nconst TreningsList = ({data, onRemove}) => {\n\n    const checkItems = (itemDate, itemDistance) => {\n        if (itemDate !== '' & itemDistance !== '') return true\n    }\n\n    const sortData = (data) => {\n        return data.sort((a, b) => (+moment(b.date, 'DD.MM.YYYY')) - (+moment(a.date, 'DD.MM.YYYY')))\n    }\n\n    return (\n        <>\n            <div className=\"trenings__titles\">\n                <span>Дата (ГГ.ММ.ДД)</span>\n                <span>Пройдено км</span>\n                <span>Действия</span>\n            </div>\n            <div className=\"trenings__wrapper\">\n                {sortData(data).map(item => { return(\n                    checkItems(item.date,item.distance) &&\n                        <div className=\"trenings__items\" key={item.id}>\n                            <span>{item.date}</span>\n                            <span>{item.distance}</span>\n                            <span className=\"trenings__items-close\" onClick={() => onRemove(item.id)}>X</span>\n                        </div>)}\n                )}\n            </div>\n        </>\n    );\n}\n\nTreningsList.propTypes = {\n    onRemove: propTypes.func,\n    data: propTypes.array\n};\n\n\nexport default TreningsList;\n","import './App.css';\nimport Form from './components/Form';\nimport TreningsList from './components/TreningsList';\nimport { useState } from 'react';\nimport shortid from 'shortid';\n\nfunction App() {\n\n  const [trenings, setTrenings] = useState([{id: '', date: '', distance: ''}]);\n\n  const addHandler = (dateFromInput, distanceFromInput) => {\n    if(trenings.filter(filtered => filtered.date === dateFromInput).length !== 0){\n      let id = trenings.filter(filtered => filtered.date === dateFromInput)[0].id\n      setTrenings(trenings => \n        trenings.map(item => \n          item.id === id ? {...item, distance: Number(item.distance) + Number(distanceFromInput)} : item))\n    } else{\n      setTrenings(prev => [...prev, {id: shortid.generate(), date: dateFromInput, distance: distanceFromInput}])\n    }\n  }\n\n  const removeHandler = (id) => {\n    setTrenings(prev => prev.filter(filtered => filtered.id !== id))\n  }\n\n  return (\n    <div className=\"trenings\">\n      <Form onAdd={addHandler}/>\n      <TreningsList data={trenings} onRemove={removeHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}